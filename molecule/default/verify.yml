---
- name: Verify
  hosts: all
  become: true
  gather_facts: true
  tasks:
    - name: Check if ansible user exists
      ansible.builtin.user:
        name: ansible
        state: present
      check_mode: true
      register: ansible_user_check

    - name: Verify ansible user was created
      ansible.builtin.assert:
        that:
          - not ansible_user_check.changed
        fail_msg: "Ansible user was not created"

    - name: Check if rocky user was removed
      ansible.builtin.user:
        name: rocky
        state: absent
      check_mode: true
      register: rocky_user_check

    - name: Verify rocky user was removed
      ansible.builtin.assert:
        that:
          - not rocky_user_check.changed
        fail_msg: "Rocky user was not removed"

    - name: Check SSH configuration
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
      check_mode: true
      register: ssh_config_check

    - name: Verify SSH is configured securely
      ansible.builtin.assert:
        that:
          - not ssh_config_check.changed
        fail_msg: "SSH configuration is not secure"

    - name: Check if swap is disabled in fstab
      ansible.builtin.shell: |
        set -o pipefail
        grep -v '^#' /etc/fstab | grep swap || true
      register: swap_check
      changed_when: false

    - name: Verify swap is disabled
      ansible.builtin.assert:
        that:
          - swap_check.stdout == ""
        fail_msg: "Swap is not disabled in /etc/fstab"

    - name: Check sysctl parameters
      ansible.builtin.command: sysctl vm.swappiness
      register: sysctl_check
      changed_when: false

    - name: Verify sysctl parameters
      ansible.builtin.assert:
        that:
          - "'vm.swappiness = 0' in sysctl_check.stdout"
        fail_msg: "Sysctl parameters are not set correctly"

    - name: Verify system uptime (indicates successful reboot handling)
      shell: uptime
      register: uptime_check
      changed_when: false

    - name: Display uptime for verification
      debug:
        msg: "System uptime: {{ uptime_check.stdout }}"

    - name: Check if systemd services are running properly
      service:
        name: "{{ item }}"
        state: started
      check_mode: true
      register: service_check
      loop:
        - "{{ 'ssh' if ansible_os_family == 'Debian' else 'sshd' }}"
        - systemd-logind
      failed_when: false

    - name: Verify essential services are running
      assert:
        that:
          - not item.changed
        fail_msg: "Service {{ item.item }} is not running"
      loop: "{{ service_check.results }}"
      when: item.failed is not defined or not item.failed
